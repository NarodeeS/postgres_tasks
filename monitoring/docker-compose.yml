version: '3.9'

services:
  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter
    restart: unless-stopped
    expose:
      - 9113
    networks:
      - monitoring-network
      - frontend-network
    command: -nginx.scrape-uri http://nginx:80/metrics

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - 9090:9090
    networks:
      - monitoring-network
      - backend-network
      - frontend-network
  
  alert-manager:
    image: prom/alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alert-manager-dev.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:9093
    env_file:
      - .env

  grafana:
    container_name: grafana
    build: monitoring/grafana
    image: narodees/postgres_tasks-grafana
    ports:
      - 3000:3000
    networks:
      - monitoring-network
    env_file:
      .env

  grafana-loki:
    image: grafana/loki
    ports:
      - 3100:3100
    volumes:
      - ./monitoring/loki-config-dev.yml:/etc/loki/loki-config.yml
    command:
      - -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring-network
  
  grafana-promtail:
    image: grafana/promtail
    volumes:
      - ./monitoring/promtail.yml:/etc/promtail/promtail.yaml
      - logs_volume:/var/log
    command:
      - --config.file=/etc/promtail/promtail.yaml
    networks:
      - monitoring-network

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring-network

networks:
  monitoring-network:
  rabbit-network:
  backend-network:
  frontend-network:

volumes:
  logs_volume:
