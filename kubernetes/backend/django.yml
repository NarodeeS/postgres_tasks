apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: postgres-tasks
spec:
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      volumes:
        - name: static-volume
          persistentVolumeClaim:
            claimName: static-volume
      containers:
        - name: django
          image: narodees/postgres_tasks-django:0.1
          command: ["supervisord"]
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: static-volume
              mountPath: /server/static
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: POSTGRES_PASSWORD
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: RABBITMQ_DEFAULT_PASS
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: my-config
                  key: POSTGRES_DB
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: my-config
                  key: DEBUG
---
apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: postgres-tasks
spec:
  selector:
    app: django
  ports:
    - name: web
      port: 8000
      targetPort: 8000
